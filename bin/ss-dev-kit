#!/usr/bin/env php
<?php declare(strict_types=1);

if (PHP_VERSION_ID < 80100) {
    echo 'Silverstripe Developer Kit requires at least PHP 8.1 and you are running ' . PHP_VERSION
     . ', please upgrade PHP. Aborting.' . PHP_EOL;
    exit(1);
}

$autoloadFile = __DIR__ . DIRECTORY_SEPARATOR . '..' . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'autoload.php';
if (!file_exists($autoloadFile)) {
    throw new RuntimeException('You need to run `composer install` until we make a phar for this');
}
require_once $autoloadFile;

use Silverstripe\DevKit\Application;
use Silverstripe\DevKit\Command;

Application::bootstrap();

// @TODO consider handling version number similarly to how composer does.
// You can use the major and probably even minor version as a constant,
// and then when packaging the phar mark the actual patch version as well.
$application = new Application('Silverstripe Developer Kit');

// @TODO review the default options in Application::getDefaultInputDefinition()
// Make sure we're respecting everything there - or remove anything we explicitly
// have decided not to respect.

// Add custom commands
$application->addCommands([
    // new Command\??\Proxy(),
    new Command\Env\Create(),
    new Command\Env\Destroy(),
    new Command\Env\Details(),
    new Command\Docker\Up(),
    new Command\Docker\Down(),
    new Command\Docker\Start(),
    new Command\Docker\Stop(),
    new Command\Docker\Restart(),
    new Command\Docker\Exec(),
    new Command\Infrastructure\PhpConfig(),
    new Command\Database\Dump(),
    new Command\Database\Restore(),
]);

// start
$application->run();
